$margin: 8rem;

* {
    user-select: none;
}

body {
    min-width: 16rem;
}

header {
    z-index: 10;
    height: 4rem;
    margin-bottom: -4rem;
    .bi {
        vertical-align: -.125em;
        fill: currentColor;
    }
    .navbar-collapse {
        &.collapse.in {
            display: block!important;
        }
    }
}
  
.page-center {
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#id-home {
    min-height: 35rem;
    
    .cls-image {
        width: 85%;
        height: fit-content;
        position: relative;
        margin-left: 15%;
        border-bottom-left-radius: 50%;
        margin-top: 15%;
    }
    
    .cls-image>img {
        width: 115%;
        margin-left: -20%;
        transform: translateY(-10%);
    }
    
    .cls-image-border {
        position: absolute;
        width: 100%;
        background-color: white;
    }
}

#id-features .tab-pane {
    .cls-image {
        width: 100%;
        height: fit-content;
        position: relative;
        margin: 30% 0 20% -10%;
        border-bottom-right-radius: 50%;
    }

    .cls-image>img {
        width: 75%;
        margin-left: 32%;
        transform: translateY(-25%);
    }
    
    .cls-image-border {
        position: absolute;
        width: 100%;
        background-color: white;
    }
}

// Initial aproach
//
// #id-downloads {
//     padding-bottom: 20%;
//    
//     .card.cls-tv-10 {
//         transform: translateY(10%);
//     }
//     .card.cls-tv-20 {
//         transform: translateY(20%);
//     }
// }

// Solution with a function, a placeholder and an extend
// The placeholder must be generated on any iteration
// The generated css has duplicate rules but it works
//
// @for $n from 2 through 3 {
//     %translate {
//         .card:nth-of-type(#{$n}) {
//             transform: translateY(($n - 1) * 10%);
//         }
//     }
//     #id-downloads {
//         padding-bottom: 20%;
//         @extend %translate;
//     }
// }

// Solution with a function and an extend
// No duplicate rules

#id-downloads {
    padding-bottom: 20%;
    @for $n from 2 through 3 {
        .card:nth-child(#{$n}) {
            transform: translateY(($n - 1) * 10%);
        }
    }
}



    
// }

$footer-color: #242946;

#id-footer {
    background-color: $footer-color;
    .list-group-item {
        background-color: $footer-color;
        border-color: $footer-color;
        a {
            color: lightgray !important;
        }
        
    }
}


